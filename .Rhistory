colnames(HE_cont) <- c("Mortality","Poverty")
HE_cont_df <- mutate(as.data.frame(HE_cont),Age=AGE)
library(DemoDecomp)
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_cont <- matrix(HE_Decomp_Cont,nrow=(length(HE_Decomp_Cont)/2),ncol=2,
byrow=F)
colnames(HE_cont) <- c("Mortality","Poverty")
DEC_RES=function(start.age, open.age,
year1, year2, country){
filter(Total,Year==year1 & Age >=start.age & CNT == country)
# 5) Getting the female death rates for ages >=65 in 1970 and 1990
mx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$mx
mx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$mx
# 6) We considered 85+ as the open age interval to match the disability data
wx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$HCR
wx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$HCR
# 6) We considered 85+ as the open age interval to match the disability data
# Making a single vector of mx followed by wx - we need these as input for either horiuchi or stepwise_replacement
mxwx1 <- c(mx1,wx1)
mxwx2 <- c(mx2,wx2)
library(DemoDecomp)
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_cont <- matrix(HE_Decomp_Cont,nrow=(length(HE_Decomp_Cont)/2),ncol=2,
byrow=F)
colnames(HE_cont) <- c("Mortality","Poverty")
# 2) Creating a data frame with the matrices and adding
# a column with the beginning of the age interval
HE_cont_df <- mutate(as.data.frame(HE_cont),Age=AGE)
# 3) Making the long data format
HE_cont_res <- melt(HE_cont_df,id.vars="Age")
colnames(HE_cont_res) <- c("Age","type","Contribution")
# 4) Checking if the data is in the long format
HE_cont_res$CNT <- country
return(HE_cont_res)}
AGE=c(seq(start.age,open.age,5))
DEC_RES(start.age =0,
open.age = 80,year1 = year1,
year2 = year2, country="IT")
Total$CNT
country <- unique(Total$CNT)
year1 =2007
year2 = 2019
Res <- list()
for (i in 1:length(country)) {
cnt <- country[i]
Res[[cnt]] <-  DEC_RES(start.age =start.age,
open.age = open.age,year1 =year1 ,
year2 = year2,country=cnt)
}
HE_cont_res <-  do.call(rbind.data.frame, Res)
rownames(HE_cont_res) <- NULL
head(HE_cont_res)
TOT <- ggplot(data=HE_cont_res, aes(x=as.factor(Age),
y=Contribution, fill =type))+
geom_bar(stat = "identity", position = "stack")+coord_flip()+facet_wrap(~CNT)+
#scale_fill_manual(values=c("grey30", "grey60"))+
scale_x_discrete(labels=c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54","55-59",
"60-64","65-69","70-74","75-79","80-84","85+"))+
geom_hline(yintercept=0, linetype="dashed", color = "gray50", size=0.5)+ggtitle("Female population") + xlab("Age")+
#scale_y_continuous(breaks=seq(-0.1,0.3,by=0.05))+
# xlab("Age-group")+annotate("text", x=3, y=0.2,
#                            label=paste("HLE", year1,"=", round(Sullivan.fun(rates=mxwx1,sex = Gender),2)),fontface =1)+
#annotate("text", x=5, y=0.2,
#        label=paste("HLE", year2,"=", round(Sullivan.fun(rates=mxwx2,sex = Gender),2)),fontface =1)+
labs(fill = "Effect", size=8)+theme_minimal()+
theme(axis.text.x = element_text(size=8),axis.text.y = element_text
(size=8),legend.text=element_text(size=8))+
theme(axis.title.x = element_text(size=8),axis.title = element_text
(size=8),legend.title=element_text(size=8))
TOT
DEC_RES(start.age =0,
open.age = 80,year1 = year1,
year2 = year2, country="DE")
country="DE"
start.age =0
open.age = 80
year1 = year1
year2 = year2
str(Total)
filter(Total, CNT == country)
filter(Total,Year==year1 & Age >=start.age & CNT == country)
# 5) Getting the female death rates for ages >=65 in 1970 and 1990
mx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$mx
mx1
mx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$mx
mx2
wx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$HCR
wx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$HCR
wx1
wx2
# 6) We considered 85+ as the open age interval to match the disability data
length(wx1)
length(mx1)
# Making a single vector of mx followed by wx - we need these as input for either horiuchi or stepwise_replacement
mxwx1 <- c(mx1,wx1)
mxwx2 <- c(mx2,wx2)
mxwx1
mxwx2
library(DemoDecomp)
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_cont <- matrix(HE_Decomp_Cont,nrow=(length(HE_Decomp_Cont)/2),ncol=2,
byrow=F)
HE_cont
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_Decomp_Cont
mxwx1
mxwx2
filter(Total, CNT == country)
filter(Total,Year==year1 & Age >=start.age & CNT == country)
filter(Total,Year==year2 & Age >=start.age & CNT == country)
year2 = 2018
str(Total)
filter(Total, CNT == country)
filter(Total,Year==year1 & Age >=start.age & CNT == country)
filter(Total,Year==year2 & Age >=start.age & CNT == country)
# 5) Getting the female death rates for ages >=65 in 1970 and 1990
mx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$mx
mx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$mx
wx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$HCR
wx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$HCR
# 6) We considered 85+ as the open age interval to match the disability data
length(wx1)
length(mx1)
# Making a single vector of mx followed by wx - we need these as input for either horiuchi or stepwise_replacement
mxwx1 <- c(mx1,wx1)
mxwx2 <- c(mx2,wx2)
library(DemoDecomp)
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_cont <- matrix(HE_Decomp_Cont,nrow=(length(HE_Decomp_Cont)/2),ncol=2,
byrow=F)
HE_cont
filter(Total,Year==year1 & Age >=start.age & CNT == country)
filter(Total,Year==year2 & Age >=start.age & CNT == country)
country
country <- unique(Total$CNT)
country
country <-country %>% filter(!="DE")
country
country[1]
country[1,3,4,5]
country <- unique(Total$CNT)
country[1,3,4,5]
country[c(1,3,4,5)]
country <-country[c(1,3,4,5)]
year1 =2007
year2 = 2019
Res <- list()
for (i in 1:length(country)) {
cnt <- country[i]
Res[[cnt]] <-  DEC_RES(start.age =start.age,
open.age = open.age,year1 =year1 ,
year2 = year2,country=cnt)
}
HE_cont_res <-  do.call(rbind.data.frame, Res)
rownames(HE_cont_res) <- NULL
head(HE_cont_res)
TOT <- ggplot(data=HE_cont_res, aes(x=as.factor(Age),
y=Contribution, fill =type))+
geom_bar(stat = "identity", position = "stack")+coord_flip()+facet_wrap(~CNT)+
#scale_fill_manual(values=c("grey30", "grey60"))+
scale_x_discrete(labels=c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54","55-59",
"60-64","65-69","70-74","75-79","80-84","85+"))+
geom_hline(yintercept=0, linetype="dashed", color = "gray50", size=0.5)+ggtitle("Female population") + xlab("Age")+
#scale_y_continuous(breaks=seq(-0.1,0.3,by=0.05))+
# xlab("Age-group")+annotate("text", x=3, y=0.2,
#                            label=paste("HLE", year1,"=", round(Sullivan.fun(rates=mxwx1,sex = Gender),2)),fontface =1)+
#annotate("text", x=5, y=0.2,
#        label=paste("HLE", year2,"=", round(Sullivan.fun(rates=mxwx2,sex = Gender),2)),fontface =1)+
labs(fill = "Effect", size=8)+theme_minimal()+
theme(axis.text.x = element_text(size=8),axis.text.y = element_text
(size=8),legend.text=element_text(size=8))+
theme(axis.title.x = element_text(size=8),axis.title = element_text
(size=8),legend.title=element_text(size=8))
TOT
ggsave("PF_LE.pdf",TOT, width = 15, height = 10)
TOT <- ggplot(data=HE_cont_res, aes(x=as.factor(Age),
y=Contribution, fill =type))+
geom_bar(stat = "identity", position = "stack")+coord_flip()+facet_wrap(~CNT)+
#scale_fill_manual(values=c("grey30", "grey60"))+
scale_x_discrete(labels=c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54","55-59",
"60-64","65-69","70-74","75-79","80-84","85+"))+
geom_hline(yintercept=0, linetype="dashed", color = "gray50", size=0.5)+ggtitle("Total population") + xlab("Age")+
#scale_y_continuous(breaks=seq(-0.1,0.3,by=0.05))+
# xlab("Age-group")+annotate("text", x=3, y=0.2,
#                            label=paste("HLE", year1,"=", round(Sullivan.fun(rates=mxwx1,sex = Gender),2)),fontface =1)+
#annotate("text", x=5, y=0.2,
#        label=paste("HLE", year2,"=", round(Sullivan.fun(rates=mxwx2,sex = Gender),2)),fontface =1)+
labs(fill = "Effect", size=8)+theme_minimal()+
theme(axis.text.x = element_text(size=8),axis.text.y = element_text
(size=8),legend.text=element_text(size=8))+
theme(axis.title.x = element_text(size=8),axis.title = element_text
(size=8),legend.title=element_text(size=8))
TOT
ggsave("PF_LE.pdf",TOT, width = 15, height = 10)
library('HMDHFDplus')
library('tidyverse')
library('data.table')
library(tidyverse)
library(reshape2)
load("Total.RData")
head(Total)
Total$Age<- 0
Total$Age[Total$Ageclass==1] <- 5
Total$Age[Total$Ageclass==2] <- 10
Total$Age[Total$Ageclass==3] <- 15
Total$Age[Total$Ageclass==4] <- 20
Total$Age[Total$Ageclass==5] <- 25
Total$Age[Total$Ageclass==6] <- 30
Total$Age[Total$Ageclass==7] <- 35
Total$Age[Total$Ageclass==8] <- 40
Total$Age[Total$Ageclass==9] <- 45
Total$Age[Total$Ageclass==10] <- 50
Total$Age[Total$Ageclass==11] <- 55
Total$Age[Total$Ageclass==12] <- 60
Total$Age[Total$Ageclass==13] <- 65
Total$Age[Total$Ageclass==14] <- 70
Total$Age[Total$Ageclass==15] <- 75
Total$Age[Total$Ageclass==16] <- 80
Sullivan.fun = function (rates,age=AGE,sex="Male") {
# 1) First, we split from our single vector 'rates' the set of age-specific death rates (mx) and age-specific prevalence of disability (wx)
lengthvec <- length(rates)
mx <- rates[1:(lengthvec / 2)]
wx <- rates[(lengthvec / 2 + 1):lengthvec]
# 2) Calculating period life table functions
# ax
n <- c(diff(age), 1)
ax <- 0.5 * n
# This part of the code is only for calculations when the
# starting age is zero.
# Formulas are from Andreev & Kingkade (2015)
#---------------------------------------------------------
if (age[1] == 0) {
if (sex == 'Male') {
ax[1] <- ifelse(mx[1] >= 0.08307,0.29915,
ifelse(mx[1] < 0.023,
0.14929 - 1.99545 * mx[1],
0.02832 + 3.26021 * mx[1] ))}
if (sex == 'Female') {
ax[1] <- ifelse(mx[1] >= 0.06891,0.31411,
ifelse(mx[1] < 0.01724,
0.14903 - 2.05527 * mx[1],
0.04667 + 3.88089 * mx[1] ))} }
#---------------------------------------------------------
# probability of dying (qx) and surviving (px)
qx <- (n * mx)/(1 + (n - ax) * mx)
qx <- c(qx[-(length(qx))], 1)
qx[qx > 1] <- 1
px <- 1 - qx
# survivors at age x (lx)
lx <- c(100000,rep(0,(length(mx)-1)))
for (i in 1:(length(mx) -1)){
lx[i+1] <- lx[i]*px[i] }
# deaths between ages x and x+n (dx)
dx <- lx * qx
# person-years lived between ages x and x+n (Lx)
Lx <- rep(0,length(mx))
for (i in 1:length(mx) -1){
Lx[i] <- lx[i+1]*n[i] + ax[i]*dx[i] }
Lx[length(mx)] <- lx[length(mx)]/mx[length(mx)]
# 3) Person-years lived without disability
Lx.health <- Lx*(1-wx)
# 4) Healthy Life expectancy at age 0
ex.health <- sum(Lx.health)/lx[1]
return(ex.health)
}
#only if ages are not equal spaced
start.age <- 0
open.age <- 80
library(tidyverse)
library(dplyr)
AGE=c(seq(start.age,open.age,5))
year1 = 2007; year2 = 2019;country="IT"
str(Total)
DEC_RES=function(start.age, open.age,
year1, year2, country){
filter(Total,Year==year1 & Age >=start.age & CNT == country)
# 5) Getting the female death rates for ages >=65 in 1970 and 1990
mx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$mx
mx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$mx
# 6) We considered 85+ as the open age interval to match the disability data
wx1 <- filter(Total,Year==year1 & Age >=start.age &  CNT == country)$HCR
wx2 <- filter(Total,Year==year2 & Age >=start.age &  CNT == country)$HCR
# 6) We considered 85+ as the open age interval to match the disability data
# Making a single vector of mx followed by wx - we need these as input for either horiuchi or stepwise_replacement
mxwx1 <- c(mx1,wx1)
mxwx2 <- c(mx2,wx2)
library(DemoDecomp)
HE_Decomp_Cont <- horiuchi(
func=Sullivan.fun,
pars1 = mxwx1,
pars2 = mxwx2,
N=100)
HE_cont <- matrix(HE_Decomp_Cont,nrow=(length(HE_Decomp_Cont)/2),ncol=2,
byrow=F)
colnames(HE_cont) <- c("Mortality","Poverty")
# 2) Creating a data frame with the matrices and adding
# a column with the beginning of the age interval
HE_cont_df <- mutate(as.data.frame(HE_cont),Age=AGE)
# 3) Making the long data format
HE_cont_res <- melt(HE_cont_df,id.vars="Age")
colnames(HE_cont_res) <- c("Age","type","Contribution")
# 4) Checking if the data is in the long format
HE_cont_res$CNT <- country
return(HE_cont_res)}
AGE=c(seq(start.age,open.age,5))
DEC_RES(start.age =0,
open.age = 80,year1 = year1,
year2 = year2, country="DE")
Total$CNT
country <- unique(Total$CNT)
country <-country[c(1,3,4,5)]
year1 =2007
year2 = 2019
Res <- list()
for (i in 1:length(country)) {
cnt <- country[i]
Res[[cnt]] <-  DEC_RES(start.age =start.age,
open.age = open.age,year1 =year1 ,
year2 = year2,country=cnt)
}
HE_cont_res <-  do.call(rbind.data.frame, Res)
rownames(HE_cont_res) <- NULL
head(HE_cont_res)
TOT <- ggplot(data=HE_cont_res, aes(x=as.factor(Age),
y=Contribution, fill =type))+
geom_bar(stat = "identity", position = "stack")+coord_flip()+facet_wrap(~CNT)+
#scale_fill_manual(values=c("grey30", "grey60"))+
scale_x_discrete(labels=c("0-4","5-9","10-14","15-19","20-24","25-29",
"30-34","35-39","40-44","45-49","50-54","55-59",
"60-64","65-69","70-74","75-79","80-84","85+"))+
geom_hline(yintercept=0, linetype="dashed", color = "gray50", size=0.5)+ggtitle("Total population") + xlab("Age")+
#scale_y_continuous(breaks=seq(-0.1,0.3,by=0.05))+
# xlab("Age-group")+annotate("text", x=3, y=0.2,
#                            label=paste("HLE", year1,"=", round(Sullivan.fun(rates=mxwx1,sex = Gender),2)),fontface =1)+
#annotate("text", x=5, y=0.2,
#        label=paste("HLE", year2,"=", round(Sullivan.fun(rates=mxwx2,sex = Gender),2)),fontface =1)+
labs(fill = "Effect", size=8)+theme_minimal()+
theme(axis.text.x = element_text(size=8),axis.text.y = element_text
(size=8),legend.text=element_text(size=8))+
theme(axis.title.x = element_text(size=8),axis.title = element_text
(size=8),legend.title=element_text(size=8))
TOT
e0.frommx <- function(nmx =  mx,wx, sex=1, age = c(seq(0, 80, 5)), nax = NULL){
n   <- c(diff(age), 999)
if (is.null(nax)) {
nax <- 0.5 * n
if (n[2] == 4) {
if (sex == 1) {
if (nmx[1] >= 0.107) {
nax[1] <- 0.33
nax[2] <- 1.352
}
else {
nax[1] <- 0.045 + 2.684 * nmx[1]
nax[2] <- 1.651 - 2.816 * nmx[1]
}
}
if (sex == 2) {
if (nmx[1] >= 0.107) {
nax[1] <- 0.35
nax[2] <- 1.361
}
else {
nax[1] <- 0.053 + 2.8 * nmx[1]
nax[2] <- 1.522 - 1.518 * nmx[1]
}
}
}
}
nqx          <- (n * nmx)/(1 + (n - nax) * nmx)
nqx          <- c(nqx[-(length(nqx))], 1)
nqx[nqx > 1] <- 1
npx <- 1 - nqx
lx <- cumprod(c(1, npx))
ndx <- -diff(lx)
lxpn <- lx[-1]
nLxpn <- n * lxpn + ndx * nax
nLx <- c(nLxpn[-length(nLxpn)], lxpn[length(lxpn)-1]/nmx[length(nmx)])
Tx <- rev(cumsum(rev(nLx)))
lx <- lx[1:length(age)]
ex <- Tx/lx
e0 <- ex[1]
Lx.health <-  nLx*(1-wx)
# 4) Healthy Life expectancy at age 0
ex.health <- sum(Lx.health)/lx
ex.health <-  ex.health[1]
return(list=c(e0,ex.health))
}
load("Total.RData")
unique(Total$CNT)
library(data.table)
library(tidyverse)
Total$Ageclass <- as.numeric(as.character(Total$Ageclass))
mxtot <- Total %>% filter(Year==2010,CNT=="IT")
mxtot <-mxtot[order(as.numeric(as.character(mxtot$Ageclass))),]
plot(mxtot$mx[c(1:17)])
e0.frommx(mxtot$mx,sex = 1,wx = mxtot$HCR)
###################
head(Total)
Total <- Total %>%mutate(Year=as.numeric(as.character(Year)))  %>% filter(CNT!="DE",Year>2006)
Y <- 2007:2019
#Total$HCR <- Total$HCR/5
str(Total)
Total$CNT <- as.character(Total$CNT)
fill_ <- function(data,Y,cnt=cnt){
Res <- matrix(nrow =length(Y) ,ncol =4)
Res[,1] <- Y
Res[,2] <- cnt
for (i in 1:length(Y)) {
year <- Y[i]
mxtot <- Total %>% filter(Year==year,CNT==cnt)
#mxtot <-mxtot[order(as.numeric(as.character(mxtot$Ageclass))),]
Res[i,3] <- e0.frommx(mxtot$mx,sex = 1,wx = mxtot$HCR)[1]
Res[i,4] <- e0.frommx(mxtot$mx,sex = 1,wx = mxtot$HCR)[2]
}
return(Res)
}
prova<- unique(Total$CNT)[1]
fill_(data=Total,Y=2007:2019,cnt=prova)
#
# Res <- matrix(nrow =length(Y) ,ncol =3)
# Res[,1] <- Y
# for (i in 1:length(Y)) {
#
#   year <- Y[i]
#
#   mxtot <- Total %>% filter(Year==year,CNT=="IT")
#   mxtot <-mxtot[order(as.numeric(as.character(mxtot$Ageclass))),]
#   Res[i,2] <- e0.frommx(mxtot$mx,sex = 1,wx = mxtot$HCR)[1]
#   Res[i,3] <- e0.frommx(mxtot$mx,sex = 1,wx = mxtot$HCR)[2]
#
#
# }
Y
Res2 <- list()
country <- unique(Total$CNT)
for (i in 1:length(country)) {
cnt <- country[i]
Res2[[cnt]] <-  fill_(data=Total,Y=Y,cnt=cnt)
}
Res_Total <-  do.call(rbind.data.frame, Res2)
rownames(Res_Total) <- NULL
str(Res_Total)
Res_Total <- Res_Total %>% rename(Year=V1,Country=V2,
LE=V3, Poverty_free_LE=V4)
Res_Total$Year <- as.numeric(Res_Total$Year)
Res_Total$LE <- as.numeric(Res_Total$LE)
Res_Total$Poverty_free_LE <- as.numeric(Res_Total$Poverty_free_LE)
plot <- Res_Total %>% ggplot(aes(Year,LE,col="LE"))+geom_line(size=1)+geom_line(aes(Year,Poverty_free_LE,col="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
cor(Res_Total$Poverty_free_LE,Res_Total$LE)^2
ggsave("pfLE.pdf",plot, width = 12, height = 10)
plot <- Res_Total %>% ggplot(aes(Year,LE,col="LE"))+geom_line(size=1)+geom_line(aes(Year,Poverty_free_LE,fill="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
plot <- Res_Total %>% ggplot(aes(Year,LE,col="LE"))+geom_line(size=1)+geom_line(aes(Year,Poverty_free_LE,color="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
geom_line(aes(Year,Poverty_free_LE),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
plot <- Res_Total %>% ggplot(aes(Year,LE,color="LE"))+geom_line(size=1)
geom_line(aes(Year,Poverty_free_LE,color="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
geom_line(aes(Year,Poverty_free_LE,col="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
plot <- Res_Total %>% ggplot(aes(Year,LE,col="LE"))+geom_line(size=1)+geom_line(aes(Year,Poverty_free_LE,color="PFLE"),size=1)+
labs(y= "Value")+
facet_wrap(~Country)+theme_minimal(18)
plot
cor(Res_Total$Poverty_free_LE,Res_Total$LE)^2
ggsave("pfLE.pdf",plot, width = 12, height = 10)
library(readxl)
library(tidyverse)
library(reshape2)
HCR <- read_excel("HCR 2004-2020.xls")
HCR
View(HCR)
HCR$Ageclass <-gsub("classe","",HCR$Ageclass)
unique(HCR$CNT)
